name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
  {% if tagging.scheme == "semantic" %}
  tags:
    - 'v*.*.*'
  {% endif %}

jobs:

{% if lint_commands %}
lint:
  name: Lint
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v3
    - name: Run linter
      run: |
        {% for cmd in lint_commands %}
        {{ cmd }}
        {% endfor %}
{% endif %}

test:
  name: Test
  runs-on: ubuntu-latest
  needs: [{{ "lint" if lint_commands else "" }}]
  steps:
    - uses: actions/checkout@v3
    - name: Run tests
      run: |
        {% for cmd in test_commands %}
        {{ cmd }}
        {% endfor %}
    # Optional coverage reporting (manual parsing required)

build:
  name: Build
  runs-on: ubuntu-latest
  needs: [test]
  steps:
    - uses: actions/checkout@v3
    - name: Build
      run: |
        {% for cmd in build_commands %}
        {{ cmd }}
        {% endfor %}
  {% if artifacts %}
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          {% for path in artifacts.paths %}
          {{ path }}
          {% endfor %}
  {% endif %}

{% for deploy in deployments %}
{% if deploy.method == "docker" %}
docker_deploy:
  name: Docker Deploy
  runs-on: ubuntu-latest
  needs: [build]
  if: github.ref == 'refs/heads/{{ branching.protected_branches[0] if branching.protected_branches else "main" }}'
  steps:
    - uses: actions/checkout@v3
    - name: Docker login
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login {{ deploy.registry }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Docker build and push
      run: |
        docker build -t {{ deploy.registry }}/{{ deploy.image_name }}:{{ deploy.tag }} .
        docker push {{ deploy.registry }}/{{ deploy.image_name }}:{{ deploy.tag }}
{% elif deploy.method == "ssh" %}
ssh_deploy:
  name: SSH Deploy
  runs-on: ubuntu-latest
  needs: [build]
  steps:
    - name: SSH Deploy
      run: |
        ssh {{ deploy.deploy_user or 'root' }}@{{ deploy.target_server }} <<'EOF'
        cd {{ deploy.target_path }}
        {% for cmd in deploy.commands %}
        {{ cmd }}
        {% endfor %}
        echo "Deploy complete"
        EOF
{% elif deploy.method == "rsync" %}
rsync_deploy:
  name: Rsync Deploy
  runs-on: ubuntu-latest
  needs: [build]
  steps:
    - name: Rsync Deploy
      run: |
        rsync -avz {{ deploy.artifact_path }} {{ deploy.deploy_user or 'root' }}@{{ deploy.target_server }}:{{ deploy.target_path }}
{% endif %}
{% endfor %}
